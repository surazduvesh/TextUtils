{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","href","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","backgroundColor","color","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","prototype","PropTypes","string","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3d381cd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" to=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"/navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" href=\"/about\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input  onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label  className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n    title : PropTypes.string,\r\n    aboutText : PropTypes.string\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const HandelUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n  const HandelLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n  };\r\n  const HandelClearClick = () => {\r\n    let newText = \"\" \r\n    setText(newText);\r\n    props.showAlert(\"Text cleared!\", \"success\");\r\n  };\r\n\r\n  const HandelOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter your text here . . .\");\r\n  return (\r\n     <div className='container'>\r\n                   <div className=\"mb-3\"  style={{\r\n                 backgroundColor: props.mode==='dark'?'#0f132b':'white',\r\n                 color : props.mode==='dark'?'white':'black'\r\n                 }}>\r\n                <h1 className=\"my-5\">{props.heading}</h1>\r\n                <textarea\r\n                 className=\"form-control\"\r\n                 id=\"exampleFormControlTextarea1\"\r\n                 value={text}\r\n                 onChange={HandelOnChange}\r\n                 rows=\"10\"\r\n                 style={{\r\n                 backgroundColor: props.mode==='dark'?'#0f132b':'white',\r\n                 color : props.mode==='dark'?'white':'black'\r\n                 }}>\r\n                </textarea>\r\n                 <button className=\" my-3 mx-2 btn btn-primary\" onClick={HandelUpClick}>Convert to uppercase</button>\r\n                 <button className=\" my-3 mx-2 btn btn-primary\" onClick={HandelLoClick}>Convert to lowercase</button>\r\n                 <button className=\" my-3 mx-2 btn btn-primary\" onClick={HandelClearClick}>Clear text</button>\r\n            </div>\r\n\r\n        <div className=\"container my-3\"  style={{\r\n                 backgroundColor: props.mode==='dark'?'#0f132b':'white',\r\n                 color : props.mode==='dark'?'white':'black'\r\n                 }}>\r\n            <h1>Your text summary </h1>\r\n            \r\n             <p>{text.split(\" \").length} Words and {text.length} Character</p>\r\n             <p>{0.008*text.split(\" \").length} Minutes to read</p>\r\n             <h2>Preview</h2>\r\n             <p>{text.length>0?text:'please enter text to preview'}</p>\r\n        </div>\r\n     </div>\r\n\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n        }\r\n        \r\n    return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n </div>\r\n    );\r\n}\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n  \n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null) ;\n\n  const showAlert = (message, type)=>{\n    setAlert({\n    msg: message,\n    type: type })\n\n    setTimeout(\n      ()=>{\n        setAlert(null)\n      },1500)}\n  \n  \nconst toggleMode=()=>{\n   if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#0f132b' ;\n      showAlert(\"Dark mode has been enable\",\"success\")\n    }\n    \n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white' ;\n      showAlert(\"Light mode has been enable\",\"success\")\n    }\n  }\n\n  return (\n  \n   <>\n   {/* <Router> */}\n    <Navbar title=\"TextUtils\"  aboutText=\"About\" mode={mode}  toggleMode={toggleMode}/>\n    <Alert  alert={alert}/>\n    <TextForm showAlert={showAlert} heading=\"Enter the text to analyze.\"  mode={mode}/> \n    {/* <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About  showAlert={showAlert} mode={mode} />\n          </Route>\n       \n      \n          <Route exact path=\"/\">\n           <TextForm showAlert={showAlert} heading=\"Enter the text to analyze.\"  mode={mode}/> \n          </Route>\n      </Switch>\n    </div>\n   </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}